#### black ####################################################################
[tool.black]
line-length = 80
skip-magic-trailing-comma = true
target-version = ["py310"]

#### isort ####################################################################
[tool.isort]
atomic = true
case_sensitive = true
float_to_top = true
force_single_line = true
line_length = 80
lines_after_imports = 2
profile = "black"
remove_redundant_aliases = true
skip_gitignore = true

#### poetry ###################################################################
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "photos"
version = "0.0.2"
description = "Photo organizer"
authors = ["Derek Wan <d.wan@icloud.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
dycw-utilities = "^0.1.29"
exif = "^1.3.4"
jupyterlab = "^3.4.3"
jupyterlab-vim = "^0.15.1"
loguru = "^0.6.0"
more-itertools = "^8.12.0"
pandas = "^1.4.3"
pillow = "^9.1.1"
pyqt5 = "^5.15.7"
qtconsole = "^5.3.0"
tabulate = "^0.8.10"
humanize = "^4.2.1"
ExifRead = "^3.0.0"
ipython = "^8.4.0"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
bump2version = "^1.0.1"
flake8 = "^4.0.1"
flake8-absolute-import = "^1.0.0.1"
flake8-annotations = "^2.9.0"
flake8-bandit = "^3.0.0"
flake8-bugbear = "^22.4.25"
flake8-comprehensions = "^3.10.0"
flake8-debugger = "^4.1.2"
flake8-eradicate = "^1.2.1"
flake8-no-pep420 = "^2.3.0"
flake8-pie = "^0.15.0"
flake8-print = "^5.0.0"
flake8-simplify = "^0.19.2"
flake8-unused-arguments = "^0.0.10"
hypothesis = "^6.47.4"
isort = "^5.10.1"
poetry-deps-scanner = "^2.0.0"
pre-commit = "^2.18.1"
pyclean = "^2.2.0"
pytest = "^7.1.2"
pytest-instafail = "^0.4.2"
pytest-xdist = "^2.5.0"
typeguard = "^2.13.3"

#### pyright ##################################################################
[tool.pyright]
include = ["src"]
pythonVersion = "3.10"
executionEnvironments = [{ root = "src" }]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportMissingTypeArgument = false
reportPrivateUsage = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUntypedBaseClass = false
reportImplicitStringConcatenation = "error"
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"

#### pytest ###################################################################
[tool.pytest.ini_options]
addopts = [
  "-rsxX",
  "--color=auto",
  "--strict-markers",
  "--typeguard-packages=photos",
]
filterwarnings = [
  "error",
  "ignore::DeprecationWarning",
  "ignore:Implicitly cleaning up <TemporaryDirectory '.*'>:ResourceWarning",
  "ignore:unclosed file:ResourceWarning",
]
looponfailroots = ["src"]
minversion = "7.0"
testpaths = ["src/tests"]
xfail_strict = true
